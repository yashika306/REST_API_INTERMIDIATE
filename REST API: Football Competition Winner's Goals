'use strict';

const fs = require('fs');
const axios = require('axios');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', function(inputStdin) {
    inputString += inputStdin;
});

process.stdin.on('end', function() {
    inputString = inputString.split('\n');
    main();
});

function readLine() {
    return inputString[currentLine++];
}

async function fetchGoals(team, teamParam, competition, year) {
    let goals = 0;
    let page = 1;
    const MATCHES_URL = 'https://jsonmock.hackerrank.com/api/football_matches';

    while (true) {
        console.log(`Fetching ${teamParam} data for ${team}, Page: ${page}`);

        const response = await axios.get(MATCHES_URL, {
            params: {
                year: year.toString(),
                [teamParam]: team,
                page: page
            }
        });

        if (!response.data.data.length) break;

        response.data.data.forEach(match => {
            // âœ… New Fix: Filter only the matches belonging to the given competition
            if (match.competition === competition) {
                let goalKey = `${teamParam}goals`;
                let matchGoals = parseInt(match[goalKey] || '0', 10);
                console.log(`Match Goals (${goalKey}):`, matchGoals);
                goals += matchGoals;
            }
        });

        if (page >= response.data.total_pages) break;
        page++;
    }

    console.log(`${team} Total Goals as ${teamParam}:`, goals);
    return goals;
}

async function getWinnerTotalGoals(competition, year) {
    const COMPETITIONS_URL = 'https://jsonmock.hackerrank.com/api/football_competitions';

    try {
        // Fetch the competition details to get the winning team
        const response = await axios.get(COMPETITIONS_URL, {
            params: { name: competition, year: year.toString() }
        });

        if (!response.data.data.length) {
            console.log("No data found for this competition and year.");
            return 0;
        }

        const winnerTeam = response.data.data[0].winner;
        console.log(`Winner Team: ${winnerTeam}`);

        // Fetch total goals by this team
        let totalGoals = await fetchGoals(winnerTeam, 'team1', competition, year);
        totalGoals += await fetchGoals(winnerTeam, 'team2', competition, year);

        console.log(`Final Total Goals for ${winnerTeam}:`, totalGoals);
        return totalGoals;
    } catch (error) {
        console.error("Error fetching data:", error);
        return 0;
    }
}
