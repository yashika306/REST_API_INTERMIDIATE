'use strict';

const fs = require('fs');
const axios = require('axios');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', function (inputStdin) {
    inputString += inputStdin;
});

process.stdin.on('end', function () {
    inputString = inputString.split('\n');
    main();
});

function readLine() {
    return inputString[currentLine++];
}

async function getWinnerTotalGoals(competition, year) {
    const URL_COMPETITION = 'https://jsonmock.hackerrank.com/api/football_competitions';
    const URL_MATCHES = 'https://jsonmock.hackerrank.com/api/football_matches';

    try {
        // Fetch competition details
        const compResponse = await axios.get(URL_COMPETITION, {
            params: { name: competition, year: year.toString() }
        });

        if (compResponse.data.data.length === 0) {
            return 0; // No competition found
        }

        const winnerTeam = compResponse.data.data[0].winner;
        let totalGoals = 0;

        // Function to fetch goals for a given team as team1 or team2
        async function getTeamGoals(team, teamParam) {
            let goals = 0;
            let page = 1;
            let totalPages = 1;

            while (page <= totalPages) {
                const response = await axios.get(URL_MATCHES, {
                    params: {
                        year: year.toString(),
                        [teamParam]: team,
                        page: page
                    }
                });

                if (response.data.data.length === 0) break;

                totalPages = response.data.total_pages;
                response.data.data.forEach(match => {
                    goals += parseInt(match[`${teamParam}goals`] || 0);
                });

                page++;
            }

            return goals;
        }

        // Fetch goals scored by the winning team as both team1 and team2
        totalGoals += await getTeamGoals(winnerTeam, 'team1');
        totalGoals += await getTeamGoals(winnerTeam, 'team2');

        return totalGoals;
    } catch (error) {
        console.error('Error fetching data:', error);
        return 0;
    }
}
